---
name: build-chart
on:
  workflow_call:
    inputs:
      service_name:
        required: true
        type: string
    secrets:
      ACCESS_TOKEN:
        required: true
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
    - name: create new version
      id: app_version
      shell: bash
      run: |
        VERSION=$(date +'%Y.%m.%d')-$(date +'%H%M')
        echo "Version: $VERSION"
        echo "CHART_VERSION=$VERSION" >> "$GITHUB_ENV"
        echo "version=$VERSION" >> "$GITHUB_OUTPUT"
    
    - name: build charts
      shell: bash
      run: |
        git clone https://github.com/mohamedragab2024/k8s-lessons.git
        mkdir -p charts
        cp -r k8s-lessons/charts/* charts/
        rm -rf k8s-lessons
        REPO_NAME=${{ inputs.service_name }}
          for file in charts/**/*; do
            if [ -f "$file" ]; then
              sed -i "s#<CHART_NAME>#${REPO_NAME}#g" "$file"
            fi
          done
          sed -i "s#<CHART_NAME>#${REPO_NAME}#g" charts/Chart.yaml

    - name: upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: charts
        path: charts
        retention-days: 1
        if-no-files-found: ignore

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
       GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      with:
        tag_name: ${{ steps.app_version.outputs.version }}
        release_name: Release ${{ steps.app_version.outputs.version }}
        draft: false
        prerelease: false
